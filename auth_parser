#!/usr/bin/env python3        
import sys
import re
import gzip
import socket

def auth_parser(args): 
# opening and reading the file
    with gzip.open(args, 'rt') as fh:
        astring = fh.read()
        fstring = astring.split()

    # declaring the regex pattern for IP addresses
    lst = []
    # extracting the IP addresses
    for line in fstring:
        ip_data = re.findall(r'(?:[\d]{1,3})\.(?:[\d]{1,3})\.(?:[\d]{1,3})\.(?:[\d]{1,3})',line)
        for i in ip_data:
            if i == "0.0.0.0":
                pass
            else:
                lst.append(i)

# displaying the extracted IP adresses
    d = dict()
    for word in lst:
            # Check if the word is already in dictionary
            if word in d:
                # Increment count of word by 1
                d[word] = d[word] + 1
            else:
                # Add the word to dictionary with count 1
                d[word] = 1
    i = len(lst)
    dd =  dict(sorted(d.items(), key=lambda item: socket.inet_aton(item[0]))) #sorting the dictionary at first by the key
    c = {k: v for k, v in sorted(dd.items(), key=lambda item: item[1])}       #then sort the dictionary again by value, this gives the final formatting
    print("-------------------------------------\n| Percent | Count |              IP |\n-------------------------------------")
    for x, y in c.items():
        b = str((y/i) * 100)
        c = b[:6]
        if len(c) < 5:
            c = c + "00"
        print('|  {:^6} | {:>5} |{:>16} |'.format(c, y, x))
    else:
        print("-------------------------------------\n|   Total |  {:>4} |                 |\n-------------------------------------".format(i))

def main(args):
    auth_parser(args)
# CHECK TO SEE IF THIS SCRIPT IS THE MAIN SCRIPT
if __name__ == '__main__':      
    args = sys.argv[1]     # adjust this for the number of args you need
    main(args)          # call your main function

